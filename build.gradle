plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.0'
	id 'io.spring.dependency-management' version '1.1.0'
}
compileJava.options.encoding = 'UTF-8'
compileTestJava.options.encoding = 'UTF-8'

group = 'com.clevertec'
version = '1.2'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-data-rest'
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	testImplementation 'org.projectlombok:lombok:1.18.22'
	compileOnly 'org.projectlombok:lombok'
	implementation 'org.apache.logging.log4j:log4j-core:2.20.0'

	runtimeOnly 'org.postgresql:postgresql'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

tasks.named('test') {
	useJUnitPlatform()
}
jar {
	manifest {
		attributes 'Implementation-Title': project.name,
				'Implementation-Version': project.version,
				'Main-Class': 'com.clevertec.CheckRunner.CheckRunnerApplication',
				'Class-Path': configurations.compileClasspath.collect { it.getName() }.join(' ')
	}
	duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
	from configurations.runtimeClasspath.files.collect { zipTree(it) }
}